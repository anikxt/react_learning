{"ast":null,"code":"var _jsxFileName = \"/home/blaze/Desktop/web_dev/learning_react/src/CounterHooks.js\",\n    _s = $RefreshSig$();\n\n/* Hooks is a new feature with which we can do fancy things inside of a function component. \nfor eg. before, things such as state were not be able to be used inside a functional component, \nbut with the use of hooks we can now do that */\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CounterHooks(props) {\n  _s();\n\n  const [state, setState] = useState({\n    count: initialCount\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n} // functions does get the props passed into its function\n\n/* we are just using object deconstruction in order to make our props easier to read and work with */\n\n_s(CounterHooks, \"WOYTJ+WX6BApIjzfERKHgN4TXs4=\");\n\n_c = CounterHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"CounterHooks\");","map":{"version":3,"sources":["/home/blaze/Desktop/web_dev/learning_react/src/CounterHooks.js"],"names":["React","useState","CounterHooks","props","state","setState","count","initialCount"],"mappings":";;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,eAAe,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAAEK,IAAAA,KAAK,EAAEC;AAAT,GAAD,CAAlC;AACA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAOH,KAAK,CAACE;AAAb;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,C,CAED;;AAEA;;GAbwBJ,Y;;KAAAA,Y","sourcesContent":["/* Hooks is a new feature with which we can do fancy things inside of a function component. \nfor eg. before, things such as state were not be able to be used inside a functional component, \nbut with the use of hooks we can now do that */\n\nimport React, { useState } from 'react';\n\nexport default function CounterHooks(props) {\n  const [state, setState] = useState({ count: initialCount });\n  return (\n    <div>\n      <button>-</button>\n      <span>{state.count}</span>\n      <button>+</button>\n    </div>\n  );\n}\n\n// functions does get the props passed into its function\n\n/* we are just using object deconstruction in order to make our props easier to read and work with */\n"]},"metadata":{},"sourceType":"module"}